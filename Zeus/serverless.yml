service: Zeus
plugins:
  - serverless-webpack
  - serverless-prune-plugin
provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  memorySize: 256
  environment:
      TOKEN_SECRET: ${ssm:TOKEN_SECRET~true}
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
          - dynamodb:Scan
        Resource:
          Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":table/*"
custom:
  webpackIncludeModules: true
functions:
  tokenAuth:
    handler: api.jwtverify
    integration: lambda
  #==================== 以下是管理员接口 ====================
  adminList: #管理员列表
    handler: api_admin.adminList
    events:
      -
        http:
          path: admins
          method: post
          cors: true
          authorizer: tokenAuth
  adminCenter: #管理员个人中心
    handler: api_admin.adminCenter
    events:
      -
        http:
          path: admin_center
          method: get
          cors: true
          authorizer: tokenAuth
  adminNew: #创建管理员
    handler: api_admin.adminNew
    events:
      -
        http:
          path: admins
          method: post
          cors: true
          authorizer: tokenAuth
  userNew: #注册新用户
    handler: api_admin.userNew
    events:
      -
        http:
          path: users
          method: post
          cors: true
          authorizer: tokenAuth
  userAuth: #用户登录
    handler: api_admin.userAuth
    events:
      -
        http:
          path: users/auth
          method: post
          cors: true
  checkUserExist: #检查用户是否被占用
    handler: api_admin.checkUserExist
    events:
      -
        http:
          path: checkUserExist
          method: post
          cors: true
          authorizer: tokenAuth
  checkSuffixExist: #检查前缀是否被占用
    handler: api_admin.checkSuffixExist
    events:
      -
        http:
          path: checkSuffixExist
          method: post
          cors: true
          authorizer: tokenAuth
  checkNickExist: #检查昵称是否被占用
    handler: api_admin.checkNickExist
    events:
      -
        http:
          path: checkNickExist
          method: post
          cors: true
          authorizer: tokenAuth
  userChangeStatus: #变更用户状态
    handler: api_admin.userChangeStatus
    events:
      -
        http:
          path: userChangeStatus
          method: post
          cors: true
          authorizer: tokenAuth
  childList: #下级列表
    handler: api_admin.childList
    events:
      -
        http:
          path: childList/{userId}/{childRole}
          method: get
          cors: true
          authorizer: tokenAuth
  updatePassword: #重置密码
    handler: api_admin.updatePassword
    events:
      -
        http:
          path: updatePassword
          method: post
          cors: true
          authorizer: tokenAuth
  subRoleList: #二级权限列表
    handler: api_admin.subRoleList
    events:
      -
        http:
          path: subRoleList
          method: get
          cors: true
          authorizer: tokenAuth
  #==================== 以下是线路商接口 ====================
  managerList: #线路商列表
    handler: api_manager.managerList
    events:
      -
        http:
          path: managers
          method: post
          cors: true
          authorizer: tokenAuth
  managerOne: #获取线路商信息
    handler: api_manager.managerOne
    events:
      -
        http:
          path: managers/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  managerUpdate: #更新线路商
    handler: api_manager.managerUpdate
    events:
      -
        http:
          path: managers/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  avalibleManagers: #可用线路商列表
    handler: api_manager.avalibleManagers
    events:
      -
        http:
          path: avalible_managers
          method: get
          cors: true
          authorizer: tokenAuth
  #==================== 以下是商户接口 ====================
  merchantList: #商户列表
    handler: api_merchant.merchantList
    events:
      -
        http:
          path: merchants
          method: post
          cors: true
          authorizer: tokenAuth
  merchantOne: #获取商户信息
    handler: api_merchant.merchantOne
    events:
      -
        http:
          path: merchants/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  merchantUpdate: #更新商户信息
    handler: api_merchant.merchantUpdate
    events:
      -
        http:
          path: merchants/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  #==================== 以下是线路号接口 ====================
  msnList: #获取线路号列表
    handler: api_msn.msnList
    events:
      -
        http:
          path: msnList
          method: post
          cors: true
          authorizer: tokenAuth
  checkMsn: #校验MSN
    handler: api_msn.checkMsn
    events:
      -
        http:
          path: check_msn/{msn}
          method: get
          cors: true
          authorizer: tokenAuth
  lockmsn: #锁定/解锁线路号，接口编号：
    handler: api_msn.lockmsn
    events:
      -
        http:
          path: lockmsn/{msn}/{status}
          method: get
          cors: true
          authorizer: tokenAuth
  msnRandom: #随机线路号，接口编号：
    handler: api_msn.msnRandom
    events:
      -
        http:
          path: msnRandom
          method: get
          cors: true
          authorizer: tokenAuth
  captcha: #获取验证码，接口编号：
    handler: api_msn.captcha
    events:
      -
        http:
          path: captcha
          method: post
          cors: true
  #==================== 以下是第三方接口 ====================
  gameSign: #游戏管理后台登录sign
    handler: api_open.gameLoginSign
    events:
      -
        http:
          path: /game/sign
          method: post
          cors: true
          authorizer: tokenAuth