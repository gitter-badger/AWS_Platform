
service: Zeus # NOTE: update this with your service name

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true


provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  iamRoleStatements:
      -
        Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
          - dynamodb:Scan
        Resource:
          Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":table/Zeus*"

functions:
  tokenAuth:
    handler: api.jwtverify
    integration: lambda
  eva: #创建第一个管理员，接口编号0
    handler: api.eva
    events:
      -
        http:
          path: beings
          method: post
          cors: true
  adminList: #管理员列表
    handler: api.adminList
    events:
      -
        http:
          path: admins
          method: get
          cors: true
          authorizer: tokenAuth
  adminCenter: #管理员个人中心
    handler: api.adminCenter
    events:
      -
        http:
          path: admin_center
          method: get
          cors: true
          authorizer: tokenAuth
  adminNew: #创建管理员
    handler: api.adminNew
    events:
      -
        http:
          path: admins
          method: post
          cors: true
          authorizer: tokenAuth
  userNew: #注册新用户
    handler: api.userNew
    events:
      -
        http:
          path: users
          method: post
          cors: true
          authorizer: tokenAuth
  userAuth: #用户登录
    handler: api.userAuth
    events:
      -
        http:
          path: users/auth
          method: post
          cors: true
  userGrabToken: #获取用户TOKEN
    handler: api.userGrabToken
    events:
      -
        http:
          path: users/token
          method: post
          cors: true
  userChangeStatus: #变更用户状态
    handler: api.userChangeStatus
    events:
      -
        http:
          path: userChangeStatus
          method: post
          cors: true
          authorizer: tokenAuth
  managerList: #线路商列表
    handler: api.managerList
    events:
      -
        http:
          path: managers
          method: get
          cors: true
          authorizer: tokenAuth
  managerOne: #获取线路商信息
    handler: api.managerOne
    events:
      -
        http:
          path: managers/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  merchantOne: #获取商户信息
    handler: api.merchantOne
    events:
      -
        http:
          path: merchants/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  managerUpdate: #更新线路商
    handler: api.managerUpdate
    events:
      -
        http:
          path: managers/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  merchantList: #商户列表
    handler: api.merchantList
    events:
      -
        http:
          path: merchants
          method: get
          cors: true
          authorizer: tokenAuth
  merchantUpdate: #更新商户信息
    handler: api.merchantUpdate
    events:
      -
        http:
          path: merchants/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  randomPassword: #随机密码
    handler: api.randomPassword
    events:
      -
        http:
          path: random_password
          method: post
          cors: true
  avalibleManagers: #可用线路商列表
    handler: api.avalibleManagers
    events:
      -
        http:
          path: avalible_managers
          method: get
          cors: true
          authorizer: tokenAuth
  checkMsn: #校验MSN
    handler: api.checkMsn
    events:
      -
        http:
          path: check_msn/{msn}
          method: get
          cors: true
  captcha: #获取验证码，接口编号：
    handler: api.captcha
    events:
      -
        http:
          path: captcha
          method: post
          cors: true
  msnList: #获取线路号列表，接口编号：
    handler: api.msnList
    events:
      -
        http:
          path: msnList
          method: post
          cors: true
          authorizer: tokenAuth
  lockmsn: #锁定/解锁线路号，接口编号：
    handler: api.lockmsn
    events:
      -
        http:
          path: lockmsn/{msn}/{status}
          method: get
          cors: true
          authorizer: tokenAuth
  msnRandom: #随机线路号，接口编号：
    handler: api.msnRandom
    events:
      -
        http:
          path: msnRandom
          method: get
          cors: true
          authorizer: tokenAuth
  # exquery:
  #   handler: api.exquery
  #   events:
  #     -
  #       http:
  #         path: exquery
  #         method: get
  #         cors: true
  # gameNew:
  #   handler: api.gameNew
  #   events:
  #     -
  #       http:
  #         path: games
  #         method: post
  #         cors: true
  # gameList:
  #   handler: api.gameList
  #   events:
  #     -
  #       http:
  #         path: games/{gameType}
  #         method: get
  #         cors: true
  # depositPoints:
  #   handler: api.depositPoints
  #   events:
  #     -
  #       http:
  #         path: deposit_points
  #         method: post
  #         cors: true
  #         authorizer: tokenAuth
  # withdrawPoints:
  #   handler: api.withdrawPoints
  #   events:
  #     -
  #       http:
  #         path: withdraw_points
  #         method: post
  #         cors: true
  #         authorizer: tokenAuth
  # billOne:
  #   handler: api.billOne
  #   events:
  #     -
  #       http:
  #         path: bills/{userId}
  #         method: get
  #         cors: true
  #         authorizer: tokenAuth
  # billList:
  #   handler: api.billList
  #   events:
  #     -
  #       http:
  #         path: waterfall/{userId}
  #         method: get
  #         cors: true
  #         authorizer: tokenAuth