
service: Zeus # NOTE: update this with your service name

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true


provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  iamRoleStatements:
      -
        Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:Scan
        Resource:
          Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":table/Zeus*"

functions:
  tokenAuth:
    handler: api.jwtverify
    integration: lambda
  eva: #创建第一个管理员，接口编号0
    handler: api.eva
    events:
      -
        http:
          path: beings
          method: post
          cors: true
  adminList:
    handler: api.adminList
    events:
      -
        http:
          path: admins
          method: get
          cors: true
          authorizer: tokenAuth
  adminCenter:
    handler: api.adminCenter
    events:
      -
        http:
          path: admin_center
          method: get
          cors: true
          authorizer: tokenAuth
  adminNew:
    handler: api.adminNew
    events:
      -
        http:
          path: admins
          method: post
          cors: true
          authorizer: tokenAuth
  userNew:
    handler: api.userNew
    events:
      -
        http:
          path: users
          method: post
          cors: true
          authorizer: tokenAuth
  userAuth:
    handler: api.userAuth
    events:
      -
        http:
          path: users/auth
          method: post
          cors: true
  userGrabToken:
    handler: api.userGrabToken
    events:
      -
        http:
          path: users/token
          method: post
          cors: true
  managerList:
    handler: api.managerList
    events:
      -
        http:
          path: managers
          method: get
          cors: true
          authorizer: tokenAuth
  managerOne:
    handler: api.managerOne
    events:
      -
        http:
          path: managers/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  merchantOne:
    handler: api.merchantOne
    events:
      -
        http:
          path: merchants/{id}
          method: get
          cors: true
          authorizer: tokenAuth
  managerUpdate:
    handler: api.managerUpdate
    events:
      -
        http:
          path: managers/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  merchantList:
    handler: api.merchantList
    events:
      -
        http:
          path: merchants
          method: get
          cors: true
          authorizer: tokenAuth
  merchantUpdate:
    handler: api.merchantUpdate
    events:
      -
        http:
          path: merchants/{id}
          method: post
          cors: true
          authorizer: tokenAuth
  randomPassword:
    handler: api.randomPassword
    events:
      -
        http:
          path: random_password
          method: post
          cors: true
  avalibleManagers:
    handler: api.avalibleManagers
    events:
      -
        http:
          path: avalible_managers
          method: get
          cors: true
          authorizer: tokenAuth

  gameNew:
    handler: api.gameNew
    events:
      -
        http:
          path: games
          method: post
          cors: true
  gameList:
    handler: api.gameList
    events:
      -
        http:
          path: games/{gameType}
          method: get
          cors: true
  depositPoints:
    handler: api.depositPoints
    events:
      -
        http:
          path: deposit_points
          method: post
          cors: true
          authorizer: tokenAuth
  withdrawPoints:
    handler: api.withdrawPoints
    events:
      -
        http:
          path: withdraw_points
          method: post
          cors: true
          authorizer: tokenAuth
  billOne:
    handler: api.billOne
    events:
      -
        http:
          path: bills/{userId}
          method: get
          cors: true
          authorizer: tokenAuth
  billList:
    handler: api.billList
    events:
      -
        http:
          path: waterfall/{userId}
          method: get
          cors: true
          authorizer: tokenAuth
  checkMsn:
    handler: api.checkMsn
    events:
      -
        http:
          path: check_msn/{msn}
          method: get
          cors: true
  captcha: #获取验证码，接口编号：
    handler: api.captcha
    events:
      -
        http:
          path: captcha
          method: post
          cors: true
  msnList: #获取线路号列表，接口编号：
    handler: api.msnList
    events:
      -
        http:
          path: msnList
          method: post
          cors: true
          authorizer: tokenAuth
  # exquery:
  #   handler: api.exquery
  #   events:
  #     -
  #       http:
  #         path: exquery
  #         method: get
  #         cors: true